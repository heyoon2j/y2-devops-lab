description: |-
  # Automation Runbook : CreateAuroraAfterDelete
  * This Runbook creates EC2 Instance CloudFormation Stack

  ## Parameters
  * 
  * 
  * 
  * 

  ## Step
  ### Step 1. Security Group
  * 


  ### Step 2. Instance
  * 


  ### Step 3. Application Load Balance
  * 

schemaVersion: '0.3'
parameters:
  clusterName:
    type: String
    description: 'Aurora Cluster Name'
    default: 'rds-y2-test-cluster'
  instanceName:
    type: String
    description: 'Aurora Instance Name'
    default: 'rds-y2-test-cluster-instance1'
  snapshotArn:
    type: String
    description: 'Snapshot ARN'
    default: 'qwer'
  engineName:
    type: String
    description: 'Engine Name'
    default: 'aurora-postgresql'
#  : 

mainSteps:
- name: DeleteInstance
  action: aws:executeAwsApi
  maxAttempts: 1
  onFailure: Abort
  inputs:
    Service: rds
    Api: DeleteDBInstance
    DBInstanceIdentifier: '{{ instanceName }}'
    SkipFinalSnapshot: True


- name: Wating-DeleteInstance
  action: aws:assertAwsResourceProperty
  inputs:
    Service: rds
    Api: DescribeDBInstances
    DBInstanceIdentifier: '{{ instanceName }}'
    PropertySelector: Response object
    DesiredValues:
    - Desired property values


- name: DeleteAurora
  action: aws:executeAwsApi
  maxAttempts: 1
  onFailure: Abort
  inputs:
    Service: rds
    Api: DeleteDBCluster
    DBClusterIdentifier: '{{ clusterName }}'
    SkipFinalSnapshot: true

- name: Wating-DeleteAurora
  action: aws:assertAwsResourceProperty
  inputs:
    Service: rds
    Api: DescribeDBClusters
    DBClusterIdentifier: '{{ clusterName }}'
    PropertySelector: "$.DBInstances[0].DBInstanceStatus"
    DesiredValues:
    - 


- name: CreateAuroraCluster
  maxAttempts: 1
  onFailure: Abort
  action: aws:executeAwsApi
  inputs:
    Service: rds
    Api: RestoreDBClusterFromSnapshot
    DBClusterIdentifier: '{{ clusterName }}'
    SnapshotIdentifier: '{{ snapshotArn }}'
    Engine: '{{ engineName }}'
    EngineVersion: '12.7'
    Port: 5432
    DBClusterParameterGroupName: testauroraoption-dbclusterparametergroup-1ldnzt43yellj
    DBSubnetGroupName: sg-cluster-y2-test
    VpcSecurityGroupIds: ['sg-05b5cd25857dcb617']
    #BackupRetentionPeriod: 1
    #PreferredBackupWindow: 'sat:16:00-sat:16:30'
#    KmsKeyId=''
    CopyTagsToSnapshot: true
    #PreferredMaintenanceWindow: 'sat:16:00-sat:16:30'
    #BacktrackWindow: 
    EnableCloudwatchLogsExports: ['postgresql']
    DeletionProtection: false
    Tags:
      - Key: Name
        Value: '{{ clusterName }}'



- name: WatingDeleted_Complated
  action: aws:assertAwsResourceProperty
  inputs:
    Service: rds
    Api: DescribeDBClusters
    API operation inputs or parameters: A value
    PropertySelector: Response object
    DesiredValues:
    - Desired property values




- name: CreateAuroraInstance
  maxAttempts: 1
  onFailure: Abort
  action: aws:executeAwsApi
  inputs:
    Service: rds
#    Api: RestoreDBInstanceFromeDBSnashot
    Api: CreateDBInstance
    DBClusterIdentifier: '{{ clusterName }}'
    DBInstanceIdentifier: '{{ instanceName }}'
    DBInstanceClass: 'db.r5.large'
    PromotionTier: 1
    Engine: '{{ engineName }}'

    DBParameterGroupName: 'testauroraoption-dbparametergroup-1gm4i6t0q0ikd'
    #CACertificateIdentifier
    PubliclyAccessible: false
    AvailabilityZone: 'us-west-1a'
#    DeleteAutomatedBackups: true
    #MonitoringInterval: 
    #MonitoringRoleArn: 
    PreferredMaintenanceWindow: 'sat:16:00-sat:16:30'
    EnablePerformanceInsights: false
#    AllowMajorVersionUpgrade: true
    AutoMinorVersionUpgrade: false
#    Tags:
#      - Key: Name
#      - Value: '{{ instanceName }}'
