---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  # EC2 Intance Template
  * For AWS CloudFormation - EC2 Instance Template


  ## Resources
  1. 
  2. 
  3. 
  4. 


  ## Parameter
  1. 
  2. 
  3. 



Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Instance Configuration"
        Parameters:
          - InstanceNameParam
          - InstanceTypeParam
          - ImageIdParam
          
      - Label:
          default: "Network Interface Configuration"
        Parameters:
          - SubnetIdParam
          - IpAddressParam
          - SecurityGroupIdListParam


#Mappings:
#  InstanceSpec:

Parameters:
  InstanceNameParam:
    Description: "Instance Name"
    Type: String
    Default: "y2-test-testServer"
  InstanceTypeParam:
    Description: "Instance Type"
    Type: String
    Default: "t2.micro"
  ImageIdParam:
    Description: "Image ID"
    Type: String
    Default: "ami-0128faaf41afe9b78"

  SubnetIdParam:
    Description: "Subnet ID"
    Type: AWS::EC2::Subnet::Id
  IpAddressParam:
    Description: "Private IP Address"
    Type: String
    AllowedPattern: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$
  SecurityGroupIdListParam:
    Description: "Security Group ID"
    Type: List<AWS::EC2::SecurityGroup::Id>



#Rules:

#Conditions:
#  IsEncrypted: !Not [!Equals [!Ref KmsKeyParam, 'null']]
#  ExistEBSVolume1: !Not [!Equals [!Select [0, !Ref AddVolumeStackNameListParam], null]]
#  ExistEBSVolume2: !Not [!Equals [!Select [1, !Ref AddVolumeStackNameListParam], null]]


Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParam
      ImageId: !Ref ImageIdParam
      #LaunchTemplate:
      #  LicenseConfigurationArn: String
  
      NetworkInterfaces: 
        - DeviceIndex: '0'
          Description: "Root Network Interface"
          DeleteOnTermination: true
          AssociatePublicIpAddress: false
          GroupSet: !Ref SecurityGroupIdListParam
          #PrivateIpAddress: String
          PrivateIpAddresses: 
            - Primary: true
              PrivateIpAddress: !Ref IpAddressParam
          SubnetId: !Ref SubnetIdParam
          #NetworkInterfaceId: !ImportValue 
          #  Fn::Sub: ${NetworkInterfaceStackNameParam}-NetworkInterfaceId

      PrivateDnsNameOptions:
        # IPv6 DNS
        #EnableResourceNameDnsAAAARecord: Boolean
        # IPv4
        EnableResourceNameDnsARecord: true
        HostnameType: "ip-name"  # ip-name | resource-name


#      Volumes: 
#        - VolumeId: !If
#            - ExistEBSVolume1
#              !ImportValue 
#                Fn::Sub:
#                  - ${EBSVolumeStackName}-VolumeId
#                  - { EBSVolumeStackName: !Select [0, !Ref AddVolumeStackNameListParam] }
#              !Ref AWS::NoValue  
#          Device: /dev/xvdb
#        - VolumeId: !If
#            - ExistEBSVolume2
#              !ImportValue 
#                Fn::Sub:
#                  - ${EBSVolumeStackName}-VolumeId
#                  - { EBSVolumeStackName: !Select [1, !Ref AddVolumeStackNameListParam] }
#              !Ref AWS::NoValue
#          Device: /dev/xvdc

      #CpuOptions: 
      #  - CoreCount: Integer
      #    ThreadsPerCore: Integer
      
      #CreditSpecification:
      #  CPUCredits: String

      EbsOptimized: false
      
      Tenancy: "default" #default | dedicated | host
      # If Tenancy is "host", use  HostResourceGroupArn or HostId for connection Host
      #HostResourceGroupArn: String
      #HostId: String
      #Affinity: String # host / default

      #IamInstanceProfile: String
      DisableApiTermination: false
      InstanceInitiatedShutdownBehavior: stop

      # Nitro
      EnclaveOptions: 
          Enabled: false
      # 최대 절전
      HibernationOptions:
        Configured: false

      #KeyName: String

      # CloudWatch Monitoring
      Monitoring: false

      #SsmAssociations: 
      #  - SsmAssociation      

      Tags: 
        - Key: CloudFormationStack
          Value: !Ref AWS::StackId
        - Key: Name
          Value: !Ref InstanceNameParam


Outputs:
  InstanceId:
    Description: Instance ID
    Value: !Ref EC2Instance
    Export:
      Name: !Sub "${AWS::StackName}-InstanceId"
  StackId:
    Description: Stack ID
    Value: !Ref AWS::StackId
    Export:
      Name: !Sub "${AWS::StackName}-StackId"
...