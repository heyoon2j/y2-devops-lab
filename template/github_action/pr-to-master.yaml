name: Terraform Apply on Master PR

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

env:
  TF_VERSION: 1.6.6
  HEAD_BRANCH: preview

jobs:
  apply:
    name: Terraform Apply (on PR to preview merged)
    # if: github.event.pull_request.merged == true
    if: >
      github.event.issue.pull_request &&
      github.event.comment.body == '/apply'
    # 1) PR에 대한 Commnet 작성 시, apply 수행 --> 승인 절차 개념
    runs-on: local #[self-hosted, macOS]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Install GitHub CLI
      #   run: brew install gh

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: ${{ env.TF_VERSION }}

      - name: Extract Working Directory
        id: extract
        run: |
          PR_NUMBER=${{ github.event.issue.number }}
          BODY=$(gh pr view $PR_NUMBER --json body -q .body)
          BRANCH_NAME=$(echo "$BODY" | tail -n 1)
          WORKDIR=$(cat .github/terraform/.terraform_workdir.${BRANCH_NAME})
          if [ ! -d "$WORKDIR" ]; then
            echo "::error ::❌ Directory $WORKDIR does not exist."
            exit 1
          fi
          echo "workdir=$WORKDIR" >> $GITHUB_OUTPUT

      - name: Terraform Init
        run: |
          cd "${{ steps.extract.outputs.workdir }}"
          terraform init

      - name: Terraform Apply
        id: applyfile
        run: |
          cd "${{ steps.extract.outputs.workdir }}"
          APPLY_FILE=apply_output_$(date +%Y%m%d_%H%M%S)_$(openssl rand -base64 20 | tr -d '=+/' | head -c8).txt
          terraform apply -auto-approve -no-color > $APPLY_FILE
          echo "apply_file=$APPLY_FILE" >> $GITHUB_OUTPUT

      - name: Commit Apply Output to branch
        run: |
          git add "${{ steps.extract.outputs.workdir }}/${{ steps.applyfile.outputs.apply_file }}"
          git commit -m "chore: add terraform apply result"
          git push origin HEAD:${{ env.HEAD_BRANCH }}

      - name: Comment Apply Summary on PR
        run: |
          echo "### 🚀 Terraform Apply Summary" > apply_summary.txt
          echo '```hcl' >> apply_summary.txt
          grep -E '^(  #|Apply complete!|  [~+\-])' "${{ steps.extract.outputs.workdir }}/${{ steps.applyfile.outputs.apply_file }}" >> apply_summary.txt
          echo '```' >> apply_summary.txt

          gh auth setup-git
          gh pr comment ${{ github.event.issue.number }} --body-file apply_summary.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}