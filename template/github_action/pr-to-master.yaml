name: Terraform Apply on Master PR

on:
  pull_request:
    types: [closed]
    branches: [preview]

permissions:
  contents: write
  pull-requests: write

env:
  TF_VERSION: 1.6.6

jobs:
  apply:
    name: Terraform Apply (on PR to preview merged)
    if: github.event.pull_request.merged == true
    runs-on: [self-hosted, macOS]
    environment:
      name: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitHub CLI
        run: brew install gh

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Read Working Directory from file
        id: workdir
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF:-$(git rev-parse --abbrev-ref HEAD)}
          export WORKDIR=$(cat .github/terraform/.terraform_workdir.${BRANCH_NAME})
          echo "WORKDIR=$WORKDIR" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          cd "$WORKDIR"
          terraform init

      - name: Terraform Apply
        run: |
          cd "$WORKDIR"
          export APPLY_FILE=apply_output_$(date +%Y%m%d_%H%M%S)_$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c8).txt
          terraform apply -auto-approve -no-color > $APPLY_FILE
          echo "APPLY_FILE=$APPLY_FILE" >> $GITHUB_ENV

      - name: Commit Apply Output to branch
        run: |
          git add $WORKDIR/$APPLY_FILE
          git commit -m "chore: add terraform apply result"
          git push origin HEAD:${{ github.head_ref }}

      - name: Comment Apply Summary on PR
        run: |
          echo "### ðŸš€ Terraform Apply Summary" > apply_summary.txt
          echo '```hcl' >> apply_summary.txt
          grep -E '^(  #|Apply complete!|  [~+\-])' $WORKDIR/$APPLY_FILE >> apply_summary.txt
          echo '```' >> apply_summary.txt

          gh auth setup-git
          gh pr comment ${{ github.event.pull_request.number }} --body-file apply_summary.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}